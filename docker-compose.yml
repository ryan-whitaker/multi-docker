# version: '3'
# services:
#   postgres:
#     image: 'postgres:latest'
#     environment:
#       - POSTGRES_PASSWORD=postgres_password
#   redis:
#     image: 'redis:latest'
#   nginx:
#     restart: always
#     build:
#       dockerfile: Dockerfile.dev
#       context: ./nginx
#     ports:
#       - '3050:80'
#   api:
#     build:
#       dockerfile: Dockerfile.dev
#       context: ./server
#     volumes:
#       - /app/node_modules
#       - ./server:/app
#     environment:
#       - REDIS_HOST=redis
#       - REDIS_PORT=6379
#       - PGUSER=postgres
#       - PGHOST=postgres
#       - PGDATABASE=postgres
#       - PGPASSWORD=postgres_password
#       - PGPORT=5432
#   client:
#     environment:
#       - WDS_SOCKET_PORT=0
#     build:
#       dockerfile: Dockerfile.dev
#       context: ./client
#     volumes:
#       - /app/node_modules
#       - ./client:/app
#   worker:
#     build:
#       dockerfile: Dockerfile.dev
#       context: ./worker
#     volumes:
#       - /app/node_modules
#       - ./worker:/app
#     environment:
#       - REDIS_HOST=redis
#       - REDIS_PORT=6379

version: "3"
services:
  client:
    image: "cygnetops/multi-client-10-14"
    mem_limit: 128m
    hostname: client
  server:
    image: "cygnetops/multi-server-10-14"
    mem_limit: 128m
    hostname: api
    environment:
      - REDIS_HOST=$REDIS_HOST
      - REDIS_PORT=$REDIS_PORT
      - PGUSER=$PGUSER
      - PGHOST=$PGHOST
      - PGDATABASE=$PGDATABASE
      - PGPASSWORD=$PGPASSWORD
      - PGPORT=$PGPORT
  worker:
    image: "cygnetops/multi-worker-10-14"
    mem_limit: 128m
    hostname: worker
    environment:
      - REDIS_HOST=$REDIS_HOST
      - REDIS_PORT=$REDIS_PORT
  nginx:
    image: "cygnetops/multi-nginx-10-14"
    mem_limit: 128m
    hostname: nginx
    ports:
      - "80:80"